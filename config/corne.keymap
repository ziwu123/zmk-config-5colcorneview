/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>


#define AS(keycode) &as LS(keycode) keycode

/ {
    chosen {
      zmk,matrix_transform = &five_column_transform;
    };

    combos {
        compatible = "zmk,combos';
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <0>;
            binding = <&kp ESC>;
        }
    }

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        }
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                display-name = "Base";
                bindings = <
                &kp Q    &kp W   &kp E     &kp R        &kp T          &kp Y      &kp U     &kp I      &kp O    &kp P
                &kp A    &kp S   &kp D     &kp F        &kp G          &kp H      &kp J     &kp K      &kp L    &kp SEMI
                &kp Z    &kp X   &kp C     &kp V        &kp B          &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH
                                 &mo 1     &kp SPACE    &mo 1          &kp RET    &kp BSPC  &mo 2  
                >;
                };

                num_layer {
                display-name = "Num";
                bindings = <
                &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH        &trans   &trans      &kp RCTRL  &trans  &trans 
                &kp EQUAL  &kp N4  &kp N5  &kp N6  &kp LBKT        &trans   &kp RSHFT   &kp RGUI   &kp RALT  &trans 
                &kp MINUS  &kp N7  &kp N8  &kp N9  &kp RBKT        &trans   &trans      &trans     &trans  &trans 
                                   &kp N0  &trans  &trans          &trans   &trans      &trans
                >;
                };

                arrow_layer {
                display-name = "Arrow";
                bindings = <
                &trans   &trans      &kp LCTRL  &trans   &trans          &trans   &trans     &kp UP    &trans      &trans
                &trans   &kp LSHFT   &kp LGUI   &kp LALT &trans          &trans   &kp LEFT   &kp DOWN  &kp RIGHT   &trans
                &trans   &trans      &trans     &trans   &trans          &trans   &trans     &trans    &trans      &trans
                                     &trans     &trans   &trans          &trans   &trans     &trans
                >;
                };

                mouse_layer {
                display-name = "Mouse";
                bindings = <
                &trans   &trans      &trans     &trans      &trans          &trans   &trans   &trans    &trans   &trans
                &trans   &mkp RCLK   &mkp MCLK  &mkp LCLK   &trans          &trans   &trans   &trans    &trans   &trans
                &trans   &mkp MB4    &trans     &mkp MB4    &trans          &trans   &trans   &trans    &trans   &trans
                                     &trans     &trans      &trans          &trans   &trans   &trans
                >;
                };

        };
};

//&trans   &trans   &trans  &trans   &trans          &trans   &trans   &trans  &trans  &trans
//&trans   &trans   &trans  &trans   &trans          &trans   &trans   &trans  &trans  &trans
//&trans   &trans   &trans  &trans   &trans          &trans   &trans   &trans  &trans  &trans
//                  &trans  &trans   &trans          &trans   &trans   &trans

//mouse_layer {
//display-name = "Mouse";
//bindings = <
//&trans   &trans   &trans  &trans   &trans          &trans   &trans   &trans    &trans   &trans
//&trans   &trans   &trans  &trans   &trans          &trans   &trans   &trans    &trans   &trans
//&trans   &trans   &trans  &trans   &trans          &trans   &trans   &trans    &trans   &trans
//                    &trans  &trans   &trans          &trans   &trans   &trans
//>;
//};